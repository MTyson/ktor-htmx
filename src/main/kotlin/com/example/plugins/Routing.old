package com.example.plugins

import io.ktor.server.application.*
import io.ktor.server.response.*
import io.ktor.server.routing.*
import io.ktor.server.html.*
import kotlinx.html.*

fun Application.configureRouting() {
    routing {
        /*get("/") {
            call.respondText("Hello World!")
        }*/
get("/") {
            call.respondHtml {
                head {
                    title("Quotes")
                }
                body {
                    h1 { +"Quotes to Live By" }
                    ul {
                        listOf(
                            "The only way to do great work is to love what you do." to "Steve Jobs",
                            "Strive not to be a success, but rather to be of value." to "Albert Einstein",
                            "The mind is everything. What you think you become." to "Buddha"
                        ).forEach { (quote, author) ->
                            li {
                                p { +quote }
                                p { +"― $author" }
                            }
                        }
                    }
                }
            }
        }
get("/quotes/{author?}") { 
        val author = call.parameters["author"]
        val quotes = listOf(
            "This Mind is the matrix of all matter." to "Max Planck",
            "All religions, arts and sciences are branches of the same tree." to "Albert Einstein",
            "The mind is everything. What you think you become." to "Buddha"
        )
        
        val filteredQuotes = if (author != null) {
            quotes.filter { it.second.equals(author, ignoreCase = true) } 
        } else {
            quotes
        }

        call.respondHtml {
            head { title("Quotes") }
            body {
                h1 { +"Quotes to Live By" }
                ul {
                    filteredQuotes.forEach { (quote, author) ->
                        li {
                            p { +quote }
                            p { +"― $author" }
                        }
                    }
                }
            }
        }
    }
    }
post("/quotes") {
    val formParameters = call.receiveParameters()
    val quote = formParameters["quote"] ?: ""
    val author = formParameters["author"] ?: ""
    // ... save the new quote (potentially to a database) ...
    call.respondRedirect("/quotes") // Redirect to the quotes page
}
get("/add-quote") { // New route to display the form
        call.respondHtml {
            body {
                form(method = FormMethod.post, action = "/quotes") { // Form with POST method
                    label { +"Quote:" }
                    br {}
                    textInput(name = "quote") {  } // Input field for the quote
                    br {}
                    label { +"Author:" }
                    br {}
                    textInput(name = "author") {  } // Input field for the author
                    br {}
                    submitInput { +"Add Quote" } // Submit button
                }
            }
        }
    }
}
